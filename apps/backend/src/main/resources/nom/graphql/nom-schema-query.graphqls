scalar Date
scalar DateTime
scalar JSON

type Query {
    search(term: String!): [SearchResult!]!
    organisasjonsenhet(where: OrganisasjonsenhetSearch): Organisasjonsenhet
    organisasjonsenheter(where: OrganisasjonsenheterSearch): [OrganisasjonsenhetResult!]!
    ressurs(where: RessursSearch): Ressurs
    ressurser(where: RessurserSearch): [RessursResult!]!
    person(where: PersonSearch): PersonResult

    bestillingSet(bestillingSetId: ID!): BestillingSet
    bestillingSets(bestillingSetId: [ID!]): [BestillingSet!]!
}

union SearchResult = Ressurs | Organisasjonsenhet

input OrganisasjonsenhetSearch {
    agressoId: String
    orgNiv: String
}

input OrganisasjonsenheterSearch {
    agressoIder: [String!]
    orgNiv: [String!]
}

input RessursSearch {
    navIdent: String
    personIdent: String
}

input RessurserSearch {
    navIdenter: [String!]
    personIdenter: [String!]
}

input PersonSearch {
    personIdent: String!
}

type PersonResult {
    personIdent: String!
    nomId: String
    navIdent: String
    person: Person
}

type OrganisasjonsenhetResult {
    code: ResultCode!
    id: String!
    agressoId: String!
    organisasjonsenhet: Organisasjonsenhet
}

type RessursResult {
    code: ResultCode!
    id: String!
    ressurs: Ressurs
}

enum ResultCode {
    OK,
    NOT_FOUND,
    ERROR
}
